const G=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],ot=l=>(l>>>24&255|l>>>8&65280|(l&65280)<<8|(l&255)<<24)>>>0;function Y(l){if(l instanceof ArrayBuffer)return new Uint8Array(l);if(!!ArrayBuffer.isView(l))return l instanceof Uint8Array?l:new Uint8Array(l.buffer,l.byteOffset,l.byteLength)}function dt(l,t=1){const i=Y(l);if(!i)throw new TypeError("source must be a BufferSource");return Nt(i,t)}const at=65521,wt=5552;function Nt(l,t=1){let i=t>>>16&65535;t&=65535;let n=l.length,e=0;for(;n>=wt;){n-=wt;let s=wt/16;do t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t;while(--s);t%=at,i+=at}if(n){for(;n>=16;)n-=16,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t,t+=l[e++],i+=t;for(;n--;)t+=l[e++],i+=t;t%=at,i%=at}return t|i<<16}function Rt(l,t=0){const i=Y(l);if(!i)throw new TypeError("source must be a BufferSource");return Ft(i,t)}const Gt=new Uint32Array([1]),qt=new Uint8Array(Gt.buffer,0,1)[0],Ft=qt===1?Ht:jt;function Ht(l,t=0){let i=~t,n=l.byteOffset,e=0,s=l.byteLength;const h=W[0],r=W[1],a=W[2],d=W[3];for(;s&&n&3;)i=h[(i^l[e++])&255]^i>>>8,s--,n++;const u=new Uint32Array(l.buffer,n,s>>>2);let p=0;for(;s>=32;)i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],s-=32;for(;s>=4;)i^=u[p++],i=d[i&255]^a[i>>>8&255]^r[i>>>16&255]^h[i>>>24],s-=4;if(s){e+=p*4;do i=h[(i^l[e++])&255]^i>>>8;while(--s)}return i=~i,i}function jt(l,t=0){let i=~ot(t),n=l.byteOffset,e=0,s=l.byteLength;const h=W[4],r=W[5],a=W[6],d=W[7];for(;s&&n&3;)i=h[i>>>24^l[e++]]^i<<8,s--,n++;const u=new Uint32Array(l.buffer,n,s>>>2);let p=0;for(;s>=32;)i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],s-=32;for(;s>=4;)i^=u[p++],i=h[i&255]^r[i>>>8&255]^a[i>>>16&255]^d[i>>>24],s-=4;if(s){e+=p*4;do i=h[i>>>24^l[e++]]^i<<8;while(--s)}return i=~i,ot(i)}function Vt(){const l=new ArrayBuffer(8192),t=[new Uint32Array(l,256*4*0,256),new Uint32Array(l,256*4*1,256),new Uint32Array(l,256*4*2,256),new Uint32Array(l,256*4*3,256),new Uint32Array(l,256*4*4,256),new Uint32Array(l,256*4*5,256),new Uint32Array(l,256*4*6,256),new Uint32Array(l,256*4*7,256)];for(let i=0;i<256;i++){let n=i;for(let e=0;e<8;e++)n=n&1?3988292384^n>>>1:n>>>1;t[0][i]=n,t[4][i]=ot(n)}for(let i=0;i<256;i++){let n=t[0][i];for(let e=1;e<4;e++)n=t[0][n&255]^n>>>8,t[e][i]=n,t[e+4][i]=ot(n)}return t}const W=Vt(),et=16384;class Pt{constructor(){this.avail_in=0,this.next_in_index=0,this.next_out=new Uint8Array(et),this.avail_out=this.next_out.byteLength,this.next_out_index=0,this.total_in=this.total_out=0,this.msg=""}append(t){this.next_in=t,this.avail_in=t.length,this.next_in_index=0}read_buf(t,i){return this.next_in.subarray(t,t+i)}read_into_buf(t,i,n){let e=this.avail_in;return e>n&&(e=n),e===0?0:(t.set(this.next_in.subarray(this.next_in_index,this.next_in_index+e),i),this.avail_in-=e,this.next_in_index+=e,this.total_in+=e,e)}flush_pending(t){var i=t.pending;i>this.avail_out&&(i=this.avail_out),i!==0&&(this.next_out.set(t.pending_buf.subarray(t.pending_out,t.pending_out+i),this.next_out_index),this.next_out_index+=i,t.pending_out+=i,this.total_out+=i,this.avail_out-=i,t.pending-=i,t.pending===0&&(t.pending_out=0))}}function Xt(){let l,t=0,i,n=0,e=0,s=0,h=0,r=0,a=0,d=0,u,p=0,B,y=0;function Z(f,_,m,k,S,C,c,o){let b,w,x,v,T,U,M,O,R,Q,At,Et,E,ht,H,L;M=o.next_in_index,O=o.avail_in,T=c.bitb,U=c.bitk,R=c.write,Q=R<c.read?c.read-R-1:c.end-R,At=G[f],Et=G[_];do{for(;U<20;)O--,T|=(o.next_in[M++]&255)<<U,U+=8;if(b=T&At,w=m,x=k,L=(x+b)*3,v=w[L],v===0){T>>=w[L+1],U-=w[L+1],c.window[R++]=w[L+2],Q--;continue}do{if(T>>=w[L+1],U-=w[L+1],(v&16)!==0){for(v&=15,E=w[L+2]+(T&G[v]),T>>=v,U-=v;U<15;)O--,T|=(o.next_in[M++]&255)<<U,U+=8;b=T&Et,w=S,x=C,L=(x+b)*3,v=w[L];do if(T>>=w[L+1],U-=w[L+1],(v&16)!==0){for(v&=15;U<v;)O--,T|=(o.next_in[M++]&255)<<U,U+=8;if(ht=w[L+2]+(T&G[v]),T>>=v,U-=v,Q-=E,R>=ht)H=R-ht,c.window[R++]=c.window[H++],c.window[R++]=c.window[H++],E-=2;else{H=R-ht;do H+=c.end;while(H<0);if(v=c.end-H,E>v){E-=v;do c.window[R++]=c.window[H++];while(--v!==0);H=0}}do c.window[R++]=c.window[H++];while(--E!==0);break}else if((v&64)===0)b+=w[L+2],b+=T&G[v],L=(x+b)*3,v=w[L];else return o.msg="invalid distance code",E=o.avail_in-O,E=U>>3<E?U>>3:E,O+=E,M-=E,U-=E<<3,c.bitb=T,c.bitk=U,o.avail_in=O,o.total_in+=M-o.next_in_index,o.next_in_index=M,c.write=R,-3;while(!0);break}if((v&64)===0){if(b+=w[L+2],b+=T&G[v],L=(x+b)*3,v=w[L],v===0){T>>=w[L+1],U-=w[L+1],c.window[R++]=w[L+2],Q--;break}}else return(v&32)!==0?(E=o.avail_in-O,E=U>>3<E?U>>3:E,O+=E,M-=E,U-=E<<3,c.bitb=T,c.bitk=U,o.avail_in=O,o.total_in+=M-o.next_in_index,o.next_in_index=M,c.write=R,1):(o.msg="invalid literal/length code",E=o.avail_in-O,E=U>>3<E?U>>3:E,O+=E,M-=E,U-=E<<3,c.bitb=T,c.bitk=U,o.avail_in=O,o.total_in+=M-o.next_in_index,o.next_in_index=M,c.write=R,-3)}while(!0)}while(Q>=258&&O>=10);return E=o.avail_in-O,E=U>>3<E?U>>3:E,O+=E,M-=E,U-=E<<3,c.bitb=T,c.bitk=U,o.avail_in=O,o.total_in+=M-o.next_in_index,o.next_in_index=M,c.write=R,0}function A(f,_,m,k,S,C){l=0,a=f,d=_,u=m,p=k,B=S,y=C}function g(f,_,m){let k,S,C,c=0,o=0,b=0,w,x,v,T;for(b=_.next_in_index,w=_.avail_in,c=f.bitb,o=f.bitk,x=f.write,v=x<f.read?f.read-x-1:f.end-x;;)switch(l){case 0:if(v>=258&&w>=10&&(f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,m=Z(a,d,u,p,B,y,f,_),b=_.next_in_index,w=_.avail_in,c=f.bitb,o=f.bitk,x=f.write,v=x<f.read?f.read-x-1:f.end-x,m!==0)){l=m===1?7:9;break}e=a,i=u,n=p,l=1;case 1:for(k=e;o<k;){if(w!==0)m=0;else return f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);w--,c|=(_.next_in[b++]&255)<<o,o+=8}if(S=(n+(c&G[k]))*3,c>>>=i[S+1],o-=i[S+1],C=i[S],C===0){s=i[S+2],l=6;break}if((C&16)!==0){h=C&15,t=i[S+2],l=2;break}if((C&64)===0){e=C,n=S/3+i[S+2];break}if((C&32)!==0){l=7;break}return l=9,_.msg="invalid literal/length code",m=-3,f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);case 2:for(k=h;o<k;){if(w!==0)m=0;else return f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);w--,c|=(_.next_in[b++]&255)<<o,o+=8}t+=c&G[k],c>>=k,o-=k,e=d,i=B,n=y,l=3;case 3:for(k=e;o<k;){if(w!==0)m=0;else return f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);w--,c|=(_.next_in[b++]&255)<<o,o+=8}if(S=(n+(c&G[k]))*3,c>>=i[S+1],o-=i[S+1],C=i[S],(C&16)!==0){h=C&15,r=i[S+2],l=4;break}if((C&64)===0){e=C,n=S/3+i[S+2];break}return l=9,_.msg="invalid distance code",m=-3,f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);case 4:for(k=h;o<k;){if(w!==0)m=0;else return f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);w--,c|=(_.next_in[b++]&255)<<o,o+=8}r+=c&G[k],c>>=k,o-=k,l=5;case 5:for(T=x-r;T<0;)T+=f.end;for(;t!==0;){if(v===0&&(x===f.end&&f.read!==0&&(x=0,v=x<f.read?f.read-x-1:f.end-x),v===0&&(f.write=x,m=f.inflate_flush(_,m),x=f.write,v=x<f.read?f.read-x-1:f.end-x,x===f.end&&f.read!==0&&(x=0,v=x<f.read?f.read-x-1:f.end-x),v===0)))return f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);f.window[x++]=f.window[T++],v--,T===f.end&&(T=0),t--}l=0;break;case 6:if(v===0&&(x===f.end&&f.read!==0&&(x=0,v=x<f.read?f.read-x-1:f.end-x),v===0&&(f.write=x,m=f.inflate_flush(_,m),x=f.write,v=x<f.read?f.read-x-1:f.end-x,x===f.end&&f.read!==0&&(x=0,v=x<f.read?f.read-x-1:f.end-x),v===0)))return f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);m=0,f.window[x++]=s,v--,l=0;break;case 7:if(o>7&&(o-=8,w++,b--),f.write=x,m=f.inflate_flush(_,m),x=f.write,v=x<f.read?f.read-x-1:f.end-x,f.read!==f.write)return f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);l=8;case 8:return m=1,f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);case 9:return m=-3,f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m);default:return m=-2,f.bitb=c,f.bitk=o,_.avail_in=w,_.total_in+=b-_.next_in_index,_.next_in_index=b,f.write=x,f.inflate_flush(_,m)}}return{init:A,proc:g}}const Kt=9,Wt=5,Yt=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],Jt=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],Qt=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],$t=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],zt=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ti=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],J=15;let ct;const nt=[0],q=new Int32Array(J+1),F=new Int32Array(3),tt=new Int32Array(J),K=new Int32Array(J+1);function kt(l,t,i,n,e,s,h,r,a,d,u){let p,B,y,Z,A,g,f,_,m,k,S,C,c,o,b;k=0,A=i;do q[l[t+k]]++,k++,A--;while(A!==0);if(q[0]===i)return h[0]=-1,r[0]=0,0;for(_=r[0],g=1;g<=J&&q[g]===0;g++);for(f=g,_<g&&(_=g),A=J;A!==0&&q[A]===0;A--);for(y=A,_>A&&(_=A),r[0]=_,o=1<<g;g<A;g++,o<<=1)if(o-=q[g],o<0)return-3;if(o-=q[A],o<0)return-3;for(q[A]+=o,K[1]=g=0,k=1,c=2;--A!==0;)K[c]=g+=q[k],c++,k++;A=0,k=0;do g=l[t+k],g!==0&&(u[K[g]++]=A),k++;while(++A<i);for(i=K[y],K[0]=A=0,k=0,Z=-1,C=-_,tt[0]=0,S=0,b=0;f<=y;f++)for(p=q[f];p--!==0;){for(;f>C+_;){if(Z++,C+=_,b=y-C,b=b>_?_:b,B=1<<(g=f-C),B>p+1&&(B-=p+1,c=f,g<b))for(;++g<b&&(B<<=1,!(B<=q[++c]));)B-=q[c];if(b=1<<g,d[0]+b>1400)return-3;tt[Z]=S=d[0],d[0]+=b,Z!==0?(K[Z]=A,F[0]=g,F[1]=_,g=A>>>C-_,F[2]=S-tt[Z-1]-g,a.set(F,(tt[Z-1]+g)*3)):h[0]=S}for(F[1]=f-C,k>=i?F[0]=128+64:u[k]<n?(F[0]=u[k]<256?0:32+64,F[2]=u[k++]):(F[0]=s[u[k]-n]+16+64,F[2]=e[u[k++]-n]),B=1<<f-C,g=A>>>C;g<b;g+=B)a.set(F,(S+g)*3);for(g=1<<f-1;(A&g)!==0;g>>>=1)A^=g;for(A^=g,m=(1<<C)-1;(A&m)!==K[Z];)Z--,C-=_,m=(1<<C)-1}return o!==0&&y!==1?-5:0}function yt(l){ct=new Int32Array(l);for(let t=0;t<J+1;t++)q[t]=0,tt[t]=0,K[t]=0;for(let t=0;t<3;t++)F[t]=0}function ii(l,t,i,n,e){yt(19),nt[0]=0;let s=kt(l,0,19,19,null,null,i,t,n,nt,ct);return s===-3?e.msg="oversubscribed dynamic bit lengths tree":(s===-5||t[0]===0)&&(e.msg="incomplete dynamic bit lengths tree",s=-3),s}function ei(l,t,i,n,e,s,h,r,a){yt(288),nt[0]=0;let d=kt(i,0,l,257,Qt,$t,s,n,r,nt,ct);return d!==0||n[0]===0?(d===-3?a.msg="oversubscribed literal/length tree":(a.msg="incomplete literal/length tree",d=-3),d):(yt(288),d=kt(i,l,t,0,zt,ti,h,e,r,nt,ct),d!==0||e[0]===0&&l>257?(d===-3?a.msg="oversubscribed distance tree":d===-5?(a.msg="incomplete distance tree",d=-3):(a.msg="empty distance tree with lengths",d=-3),d):0)}function ni(l,t,i,n){return l[0]=Kt,t[0]=Wt,i[0]=Yt,n[0]=Jt,0}const Ct=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];class si{constructor(t){this.codes=Xt(),this.hufts=new Int32Array(1400*3),this.mode=0,this.bitk=0,this.bitb=0,this.read=0,this.write=0,this.last=0,this.end=t,this.window=new Uint8Array(t)}reset(){this.bitk=0,this.bitb=0,this.read=0,this.write=0,this.last=0}inflate_flush(t,i){let n,e,s;return e=t.next_out_index,s=this.read,n=(s<=this.write?this.write:this.end)-s,n>t.avail_out&&(n=t.avail_out),n!==0&&i===-5&&(i=0),t.avail_out-=n,t.total_out+=n,t.next_out.set(this.window.subarray(s,s+n),e),e+=n,s+=n,s===this.end&&(s=0,this.write===this.end&&(this.write=0),n=this.write-s,n>t.avail_out&&(n=t.avail_out),n!==0&&i===-5&&(i=0),t.avail_out-=n,t.total_out+=n,t.next_out.set(this.window.subarray(s,s+n),e),e+=n,s+=n),t.next_out_index=e,this.read=s,i}proc(t,i){let n,e,s,h,r,a,d,u,p=0,B=0,y=0;const Z=new Uint8Array(320),A=[0],g=[0],f=this.codes,_=this.hufts;for(h=t.next_in_index,r=t.avail_in,e=this.bitb,s=this.bitk,a=this.write,d=a<this.read?this.read-a-1:this.end-a;;)switch(this.mode){case 0:if(this.last)return 1;for(;s<3;){if(r!==0)i=0;else return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);r--,e|=(t.next_in[h++]&255)<<s,s+=8}switch(n=e&7,this.last=n&1,n>>>1){case 0:e>>>=3,s-=3,n=s&7,e>>>=n,s-=n,this.mode=1;break;case 1:const c=[0],o=[0],b=[[]],w=[[]];ni(c,o,b,w),f.init(c[0],o[0],b[0],0,w[0],0),e>>>=3,s-=3,this.mode=6;break;case 2:e>>>=3,s-=3,this.mode=3;break;case 3:return e>>>=3,s-=3,this.mode=9,t.msg="invalid block type",i=-3,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i)}break;case 1:for(;s<32;){if(r!==0)i=0;else return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);r--,e|=(t.next_in[h++]&255)<<s,s+=8}if((~e>>>16&65535)!==(e&65535))return this.mode=9,t.msg="invalid stored block lengths",i=-3,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);p=e&65535,e=s=0,this.mode=p!==0?2:this.last!==0?7:0;break;case 2:if(r===0)return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);if(d===0&&(a===this.end&&this.read!==0&&(a=0,d=a<this.read?this.read-a-1:this.end-a),d===0&&(this.write=a,i=this.inflate_flush(t,i),a=this.write,d=a<this.read?this.read-a-1:this.end-a,a===this.end&&this.read!==0&&(a=0,d=a<this.read?this.read-a-1:this.end-a),d===0)))return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);if(i=0,n=p,n>r&&(n=r),n>d&&(n=d),this.window.set(t.read_buf(h,n),a),h+=n,r-=n,a+=n,d-=n,p-=n,p!==0)break;this.mode=this.last!==0?7:0;break;case 3:for(;s<14;){if(r!==0)i=0;else return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);r--,e|=(t.next_in[h++]&255)<<s,s+=8}if(B=n=e&16383,(n&31)>29||(n>>5&31)>29)return this.mode=9,t.msg="too many length or distance symbols",i=-3,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);for(n=258+(n&31)+(n>>5&31),u=0;u<n;u++)Z[u]=0;for(e>>>=14,s-=14,y=0,this.mode=4;y<4+(B>>>10);){for(;s<3;){if(r!==0)i=0;else return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);r--,e|=(t.next_in[h++]&255)<<s,s+=8}Z[Ct[y++]]=e&7,e>>>=3,s-=3}for(;y<19;)Z[Ct[y++]]=0;if(A[0]=7,n=ii(Z,A,g,_,t),n!==0)return i=n,i===-3&&(this.mode=9),this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);for(y=0,this.mode=5;n=B,!(y>=258+(n&31)+(n>>5&31));){let c,o;for(n=A[0];s<n;){if(r!==0)i=0;else return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);r--,e|=(t.next_in[h++]&255)<<s,s+=8}if(n=_[(g[0]+(e&G[n]))*3+1],o=_[(g[0]+(e&G[n]))*3+2],o<16)e>>>=n,s-=n,Z[y++]=o;else{for(u=o===18?7:o-14,c=o===18?11:3;s<n+u;){if(r!==0)i=0;else return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);r--,e|=(t.next_in[h++]&255)<<s,s+=8}if(e>>>=n,s-=n,c+=e&G[u],e>>>=u,s-=u,u=y,n=B,u+c>258+(n&31)+(n>>5&31)||o===16&&u<1)return this.mode=9,t.msg="invalid bit length repeat",i=-3,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);o=o===16?Z[u-1]:0;do Z[u++]=o;while(--c!==0);y=u}}g[0]=-1;const m=[9],k=[6],S=[0],C=[0];if(n=ei(257+(n&31),1+(n>>5&31),Z,m,k,S,C,_,t),n!==0)return n===-3&&(this.mode=9),i=n,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);f.init(m[0],k[0],_,S[0],_,C[0]),this.mode=6;case 6:if(this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,i=f.proc(this,t,i),i!==1)return this.inflate_flush(t,i);if(i=0,h=t.next_in_index,r=t.avail_in,e=this.bitb,s=this.bitk,a=this.write,d=a<this.read?this.read-a-1:this.end-a,this.last===0){this.mode=0;break}this.mode=7;case 7:if(this.write=a,i=this.inflate_flush(t,i),a=this.write,d=a<this.read?this.read-a-1:this.end-a,this.read!==this.write)return this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);this.mode=8;case 8:return i=1,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);case 9:return i=-3,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i);default:return i=-2,this.bitb=e,this.bitk=s,t.avail_in=r,t.total_in+=h-t.next_in_index,t.next_in_index=h,this.write=a,this.inflate_flush(t,i)}}set_dictionary(t,i,n){this.window.set(t.subarray(i,i+n),0),this.read=this.write=n}}class hi{constructor(t){this.isGZip=!1,this.method=0,this.gflags=0,this.name="",this.mtime=0,this.xlen=0,this.dictChecksum=0,this.fullChecksum=0,this.inflatedSize=0,this.wbits=0,this.wbits=15,this.blocks=new si(1<<this.wbits),this.mode=t?22:0}get isComplete(){const{blocks:t}=this,i=(t.mode===0||t.mode===8)&&t.bitb===0&&t.bitk===0;return this.mode===31&&i}get fileName(){return this.name}get modDate(){if(this.mtime!==0)return new Date(this.mtime*1e3)}get checksum(){return this.fullChecksum}get fullSize(){return this.inflatedSize}get containerFormat(){return this.isGZip?2:this.method===0?0:1}inflate(t){let i;if(!t||!t.next_in)return-2;const n=0;let e=-5;for(;;)switch(this.mode){case 0:if(t.avail_in===0)return e;if(i=t.next_in[t.next_in_index],i!==31){this.mode=2;break}this.mode=1,e=n,t.avail_in--,t.total_in++,t.next_in_index++;case 1:if(t.avail_in===0)return e;if(e=n,t.avail_in--,t.total_in++,i=t.next_in[t.next_in_index++],i!==139){this.mode=32,t.msg="invalid gzip id";break}this.isGZip=!0,this.mode=2;case 2:if(t.avail_in===0)return e;if(e=n,t.avail_in--,t.total_in++,this.method=t.next_in[t.next_in_index++],(this.method&15)!==8){this.mode=32,t.msg="unknown compression method";break}if((this.method>>4)+8>this.wbits){this.mode=32,t.msg="invalid window size";break}this.mode=3;case 3:if(t.avail_in===0)return e;if(e=n,t.avail_in--,t.total_in++,i=t.next_in[t.next_in_index++]&255,this.isGZip){this.gflags=i,this.mode=9;break}if(((this.method<<8)+i)%31!==0){this.mode=32,t.msg="incorrect header check";break}if((i&32)===0){this.mode=22;break}this.mode=4;case 4:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,this.dictChecksum=(t.next_in[t.next_in_index++]&255)<<24&4278190080,this.mode=5;case 5:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,this.dictChecksum|=(t.next_in[t.next_in_index++]&255)<<16&16711680,this.mode=6;case 6:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,this.dictChecksum|=(t.next_in[t.next_in_index++]&255)<<8&65280,this.mode=7;case 7:return t.avail_in===0?e:(e=n,t.avail_in--,t.total_in++,this.dictChecksum|=t.next_in[t.next_in_index++]&255,this.mode=8,2);case 8:return this.mode=32,t.msg="need dictionary",-2;case 9:case 10:case 11:case 12:if(t.avail_in===0)return e;if(e=n,t.avail_in--,t.total_in++,i=t.next_in[t.next_in_index++]&255,this.mtime=this.mtime>>>8|i<<24,this.mode!==12){this.mode++;break}this.mode=13;case 13:case 14:case 20:case 21:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,t.next_in_index++,this.mode===14?this.gflags&4?this.mode=15:this.gflags&8?this.mode=18:this.gflags&16?this.mode=19:this.gflags&2?this.mode=20:this.mode=22:this.mode++;break;case 15:case 16:if(t.avail_in===0)return e;if(e=n,t.avail_in--,t.total_in++,i=t.next_in[t.next_in_index++]&255,this.xlen=this.xlen>>>8|i<<24,this.mode===15)break;this.xlen=this.xlen>>>16;case 17:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,t.next_in_index++,this.xlen--,this.xlen===0&&(this.gflags&8?this.mode=18:this.gflags&16?this.mode=19:this.gflags&2?this.mode=20:this.mode=22);break;case 18:case 19:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,i=t.next_in[t.next_in_index++]&255,i!==0?this.mode===18&&(this.name+=String.fromCharCode(i)):this.mode!==19&&this.gflags&16?this.mode=19:this.gflags&2?this.mode=20:this.mode=22;break;case 22:if(e=this.blocks.proc(t,e),e===-3){this.mode=32;break}if(e!==1)return e;if(e=n,this.blocks.reset(),this.method===0){this.mode=31;break}this.mode=23;case 23:case 24:case 25:case 26:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,i=t.next_in[t.next_in_index++]&255,this.isGZip?this.fullChecksum=this.fullChecksum>>>8|i<<24:this.fullChecksum=this.fullChecksum<<8|i,this.mode++,this.mode===27&&!this.isGZip&&(this.mode=31);break;case 27:case 28:case 29:case 30:if(t.avail_in===0)return e;e=n,t.avail_in--,t.total_in++,i=t.next_in[t.next_in_index++]&255,this.inflatedSize=this.inflatedSize>>>8|i<<24,this.mode++;break;case 31:return 1;case 32:return-3;default:return-2}}inflateSetDictionary(t){if(this.mode!==8)return-2;const i=Y(t);if(!i)return-3;let n=0,e=i.byteLength;return e>=1<<this.wbits&&(e=(1<<this.wbits)-1,n=i.byteLength-e),dt(i)!==this.dictChecksum?-3:(this.blocks.set_dictionary(i,n,e),this.mode=22,0)}}class ai{constructor(t){const i=t==null?void 0:t.raw;if(i!==void 0&&i!==!0&&i!==!1)throw new TypeError("options.raw must be undefined or true or false");const n=i===void 0?!1:i,e=t==null?void 0:t.dictionary;if(e!==void 0){if(n)throw new RangeError("options.dictionary cannot be set when options.raw is true");if(Y(e)===void 0)throw new TypeError("options.dictionary must be undefined or a buffer or a buffer view");this.customDict=e}this.inflate=new hi(n),this.z=new Pt}append(t){const i=Y(t);if(!(i instanceof Uint8Array))throw new TypeError("data must be an ArrayBuffer or buffer view");if(i.length===0)return[];const{inflate:n,z:e}=this,s=[];let h=!1;e.append(i);do{e.next_out_index=0,e.avail_out=et,e.avail_in===0&&!h&&(e.next_in_index=0,h=!0);const r=n.inflate(e);if(h&&r===-5){if(e.avail_in!==0)throw new Error("inflate error: bad input")}else if(r===2)if(this.customDict){if(n.inflateSetDictionary(this.customDict)!==0)throw new Error("Custom dictionary is not valid for this data")}else throw new Error("Custom dictionary required for this data");else if(r!==0&&r!==1)throw new Error("inflate error: "+e.msg);if((h||r===1)&&e.avail_in===i.length)throw new Error("inflate error: bad input data");if(e.next_out_index){const a=new Uint8Array(e.next_out.subarray(0,e.next_out_index)),d=n.containerFormat===2;this.checksum===void 0&&(this.checksum=d?0:1),d?this.checksum=Rt(a,this.checksum):this.checksum=dt(a,this.checksum),s.push(a)}}while(e.avail_in>0||e.avail_out===0);return s}finish(){const t=this.inflate.checksum,i=this.inflate.fullSize,n=this.inflate.isComplete,e=t===0?"unchecked":t===this.checksum?"match":"mismatch",s=i===0?"unchecked":i===this.z.total_out?"match":"mismatch",h=n&&e!=="mismatch"&&s!=="mismatch",r=this.inflate.fileName,a=this.inflate.modDate;return{success:h,complete:n,checksum:e,fileSize:s,fileName:r,modDate:a}}}const lt=30,ft=19,ri=29,ut=256,st=ut+1+ri,xt=2*st+1,li=7,Ut=[0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29];class I{constructor(t,i){this.dyn_tree=t,this.stat_desc=i,this.max_code=0}gen_bitlen(t){var i=this.dyn_tree,n=this.stat_desc.static_tree,e=this.stat_desc.extra_bits,s=this.stat_desc.extra_base,h=this.stat_desc.max_length,r,a,d,u,p,B,y=0;for(u=0;u<=15;u++)t.bl_count[u]=0;for(i[t.heap[t.heap_max]*2+1]=0,r=t.heap_max+1;r<xt;r++)a=t.heap[r],u=i[i[a*2+1]*2+1]+1,u>h&&(u=h,y++),i[a*2+1]=u,!(a>this.max_code)&&(t.bl_count[u]++,p=0,a>=s&&(p=e[a-s]),B=i[a*2],t.opt_len+=B*(u+p),n&&(t.static_len+=B*(n[a*2+1]+p)));if(y!==0){do{for(u=h-1;t.bl_count[u]===0;)u--;t.bl_count[u]--,t.bl_count[u+1]+=2,t.bl_count[h]--,y-=2}while(y>0);for(u=h;u!==0;u--)for(a=t.bl_count[u];a!==0;)d=t.heap[--r],!(d>this.max_code)&&(i[d*2+1]!=u&&(t.opt_len+=(u-i[d*2+1])*i[d*2],i[d*2+1]=u),a--)}}bi_reverse(t,i){let n=0;do n|=t&1,t>>>=1,n<<=1;while(--i>0);return n>>>1}gen_codes(t,i,n){const e=new Uint16Array(16);let s=0;for(let h=1;h<=15;h++)e[h]=s=s+n[h-1]<<1;for(let h=0;h<=i;h++){const r=t[h*2+1];r!==0&&(t[h*2]=this.bi_reverse(e[r]++,r))}}build_tree(t){var i=this.dyn_tree,n=this.stat_desc.static_tree,e=this.stat_desc.elems,s,h,r=-1,a;for(t.heap_len=0,t.heap_max=xt,s=0;s<e;s++)i[s*2]!==0?(t.heap[++t.heap_len]=r=s,t.depth[s]=0):i[s*2+1]=0;for(;t.heap_len<2;)a=t.heap[++t.heap_len]=r<2?++r:0,i[a*2]=1,t.depth[a]=0,t.opt_len--,n&&(t.static_len-=n[a*2+1]);for(this.max_code=r,s=Math.floor(t.heap_len/2);s>=1;s--)t.pqdownheap(i,s);a=e;do s=t.heap[1],t.heap[1]=t.heap[t.heap_len--],t.pqdownheap(i,1),h=t.heap[1],t.heap[--t.heap_max]=s,t.heap[--t.heap_max]=h,i[a*2]=i[s*2]+i[h*2],t.depth[a]=Math.max(t.depth[s],t.depth[h])+1,i[s*2+1]=i[h*2+1]=a,t.heap[1]=a++,t.pqdownheap(i,1);while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],this.gen_bitlen(t),this.gen_codes(i,this.max_code,t.bl_count)}static d_code(t){return t<256?Ut[t]:Ut[256+(t>>>7)]}}I._length_code=[0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28];I.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0];I.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576];I.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];I.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];I.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];I.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];class P{constructor(t,i,n,e,s){this.static_tree=t,this.extra_bits=i,this.extra_base=n,this.elems=e,this.max_length=s}}P.static_ltree=new Uint16Array([12,8,140,8,76,8,204,8,44,8,172,8,108,8,236,8,28,8,156,8,92,8,220,8,60,8,188,8,124,8,252,8,2,8,130,8,66,8,194,8,34,8,162,8,98,8,226,8,18,8,146,8,82,8,210,8,50,8,178,8,114,8,242,8,10,8,138,8,74,8,202,8,42,8,170,8,106,8,234,8,26,8,154,8,90,8,218,8,58,8,186,8,122,8,250,8,6,8,134,8,70,8,198,8,38,8,166,8,102,8,230,8,22,8,150,8,86,8,214,8,54,8,182,8,118,8,246,8,14,8,142,8,78,8,206,8,46,8,174,8,110,8,238,8,30,8,158,8,94,8,222,8,62,8,190,8,126,8,254,8,1,8,129,8,65,8,193,8,33,8,161,8,97,8,225,8,17,8,145,8,81,8,209,8,49,8,177,8,113,8,241,8,9,8,137,8,73,8,201,8,41,8,169,8,105,8,233,8,25,8,153,8,89,8,217,8,57,8,185,8,121,8,249,8,5,8,133,8,69,8,197,8,37,8,165,8,101,8,229,8,21,8,149,8,85,8,213,8,53,8,181,8,117,8,245,8,13,8,141,8,77,8,205,8,45,8,173,8,109,8,237,8,29,8,157,8,93,8,221,8,61,8,189,8,125,8,253,8,19,9,275,9,147,9,403,9,83,9,339,9,211,9,467,9,51,9,307,9,179,9,435,9,115,9,371,9,243,9,499,9,11,9,267,9,139,9,395,9,75,9,331,9,203,9,459,9,43,9,299,9,171,9,427,9,107,9,363,9,235,9,491,9,27,9,283,9,155,9,411,9,91,9,347,9,219,9,475,9,59,9,315,9,187,9,443,9,123,9,379,9,251,9,507,9,7,9,263,9,135,9,391,9,71,9,327,9,199,9,455,9,39,9,295,9,167,9,423,9,103,9,359,9,231,9,487,9,23,9,279,9,151,9,407,9,87,9,343,9,215,9,471,9,55,9,311,9,183,9,439,9,119,9,375,9,247,9,503,9,15,9,271,9,143,9,399,9,79,9,335,9,207,9,463,9,47,9,303,9,175,9,431,9,111,9,367,9,239,9,495,9,31,9,287,9,159,9,415,9,95,9,351,9,223,9,479,9,63,9,319,9,191,9,447,9,127,9,383,9,255,9,511,9,0,7,64,7,32,7,96,7,16,7,80,7,48,7,112,7,8,7,72,7,40,7,104,7,24,7,88,7,56,7,120,7,4,7,68,7,36,7,100,7,20,7,84,7,52,7,116,7,3,8,131,8,67,8,195,8,35,8,163,8,99,8,227,8]);P.static_dtree=new Uint16Array([0,5,16,5,8,5,24,5,4,5,20,5,12,5,28,5,2,5,18,5,10,5,26,5,6,5,22,5,14,5,30,5,1,5,17,5,9,5,25,5,5,5,21,5,13,5,29,5,3,5,19,5,11,5,27,5,7,5,23,5]);P.static_l_desc=new P(P.static_ltree,I.extra_lbits,ut+1,st,15);P.static_d_desc=new P(P.static_dtree,I.extra_dbits,0,lt,15);P.static_bl_desc=new P(null,I.extra_blbits,0,ft,li);const j=(l,t,i,n,e)=>({good_length:l,max_lazy:t,nice_length:i,max_chain:n,func:e}),$=[j(0,0,0,0,0),j(4,4,8,4,1),j(4,5,16,8,1),j(4,6,32,32,1),j(4,4,16,16,2),j(8,16,32,32,2),j(8,16,128,128,2),j(8,32,128,256,2),j(32,128,258,1024,2),j(32,258,258,4096,2)];function St(l,t,i,n){const e=l[t*2],s=l[i*2];return e<s||e==s&&n[t]<=n[i]}const z=256,Tt=16,Dt=17,It=18,fi=0,mt=1,_i=2,D=3,_t=258,N=_t+D+1,Mt=8+7,it=1<<Mt,V=it-1,X=Math.floor((Mt+D-1)/D),bt=1<<8+6,vt=bt*4,rt=Math.floor(bt/2),Bt=(1+2)*bt,Zt=2*32768;class oi{constructor(t,i=6,n=0){if(this.status=1,this.pending_buf=new Uint8Array(vt),this.pending=0,this.pending_out=0,this.last_flush=0,this.window=new Uint8Array(Zt),this.prev=new Uint16Array(32768),this.head=new Uint16Array(it),this.ins_h=0,this.block_start=0,this.match_length=D-1,this.match_available=!1,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=D-1,this.dyn_ltree=new Uint16Array(xt*2),this.dyn_dtree=new Uint16Array((2*lt+1)*2),this.bl_tree=new Uint16Array((2*ft+1)*2),this.l_desc=new I(this.dyn_ltree,P.static_l_desc),this.d_desc=new I(this.dyn_dtree,P.static_d_desc),this.bl_desc=new I(this.bl_tree,P.static_bl_desc),this.depth=new Uint16Array(2*st+1),this.last_lit=0,this.matches=0,this.opt_len=0,this.static_len=0,this.last_eob_len=8,this.bi_buf=0,this.bi_valid=0,this.bl_count=new Uint16Array(15+1),this.heap=new Uint16Array(2*st+1),this.heap_len=0,this.heap_max=xt,i<0||i>9||n<0||n>2)throw RangeError("level or strategy is out of range");this.strm=t,this.level=i,this.strategy=n,t.msg="",t.total_in=t.total_out=0,this.init_block();for(let e=0;e<it;++e)this.head[e]=0;this.max_lazy_match=$[i].max_lazy,this.good_match=$[i].good_length,this.nice_match=$[i].nice_length,this.max_chain_length=$[i].max_chain}init_block(){for(let t=0;t<st;t++)this.dyn_ltree[t*2]=0;for(let t=0;t<lt;t++)this.dyn_dtree[t*2]=0;for(let t=0;t<ft;t++)this.bl_tree[t*2]=0;this.dyn_ltree[z*2]=1,this.opt_len=this.static_len=0,this.last_lit=this.matches=0}pqdownheap(t,i){const n=this.heap,e=n[i];let s=i<<1;for(;s<=this.heap_len&&(s<this.heap_len&&St(t,n[s+1],n[s],this.depth)&&s++,!St(t,e,n[s],this.depth));)n[i]=n[s],i=s,s<<=1;n[i]=e}scan_tree(t,i){var n=-1,e,s=t[0*2+1],h=0,r=7,a=4;s===0&&(r=138,a=3),t[(i+1)*2+1]=65535;for(let d=0;d<=i;d++)e=s,s=t[(d+1)*2+1],!(++h<r&&e==s)&&(h<a?this.bl_tree[e*2]+=h:e!==0?(e!=n&&this.bl_tree[e*2]++,this.bl_tree[Tt*2]++):h<=10?this.bl_tree[Dt*2]++:this.bl_tree[It*2]++,h=0,n=e,s===0?(r=138,a=3):e==s?(r=6,a=3):(r=7,a=4))}build_bl_tree(){this.scan_tree(this.dyn_ltree,this.l_desc.max_code),this.scan_tree(this.dyn_dtree,this.d_desc.max_code),this.bl_desc.build_tree(this);let t;for(t=ft-1;t>=3&&this.bl_tree[I.bl_order[t]*2+1]===0;t--);return this.opt_len+=3*(t+1)+5+5+4,t}put_short(t){this.pending_buf[this.pending++]=t&255,this.pending_buf[this.pending++]=t>>>8&255}send_bits(t,i){if(this.bi_valid>16-i){this.bi_buf|=t<<this.bi_valid&65535;const n=this.pending;this.pending_buf[n]=this.bi_buf,this.pending_buf[n+1]=this.bi_buf>>>8,this.pending=n+2,this.bi_buf=t>>>16-this.bi_valid,this.bi_valid+=i-16}else this.bi_buf|=t<<this.bi_valid&65535,this.bi_valid+=i}send_code(t,i){const n=t*2;this.send_bits(i[n]&65535,i[n+1]&65535)}send_tree(t,i){var n=-1,e,s=t[0*2+1],h=0,r=7,a=4;s===0&&(r=138,a=3);for(let d=0;d<=i;d++)if(e=s,s=t[(d+1)*2+1],!(++h<r&&e==s)){if(h<a)do this.send_code(e,this.bl_tree);while(--h!==0);else e!==0?(e!=n&&(this.send_code(e,this.bl_tree),h--),this.send_code(Tt,this.bl_tree),this.send_bits(h-3,2)):h<=10?(this.send_code(Dt,this.bl_tree),this.send_bits(h-3,3)):(this.send_code(It,this.bl_tree),this.send_bits(h-11,7));h=0,n=e,s===0?(r=138,a=3):e==s?(r=6,a=3):(r=7,a=4)}}send_all_trees(t,i,n){this.send_bits(t-257,5),this.send_bits(i-1,5),this.send_bits(n-4,4);for(let e=0;e<n;e++)this.send_bits(this.bl_tree[I.bl_order[e]*2+1],3);this.send_tree(this.dyn_ltree,t-1),this.send_tree(this.dyn_dtree,i-1)}bi_flush(){this.bi_valid===16?(this.put_short(this.bi_buf),this.bi_buf=0,this.bi_valid=0):this.bi_valid>=8&&(this.pending_buf[this.pending++]=this.bi_buf,this.bi_buf>>>=8,this.bi_valid-=8)}_tr_align(){this.send_bits(mt<<1,3),this.send_code(z,P.static_ltree),this.bi_flush(),1+this.last_eob_len+10-this.bi_valid<9&&(this.send_bits(mt<<1,3),this.send_code(z,P.static_ltree),this.bi_flush()),this.last_eob_len=7}_tr_tally(t,i){if(this.pending_buf[rt+this.last_lit*2]=t>>>8&255,this.pending_buf[rt+this.last_lit*2+1]=t&255,this.pending_buf[Bt+this.last_lit]=i&255,this.last_lit++,t===0?this.dyn_ltree[i*2]++:(this.matches++,t--,this.dyn_ltree[(I._length_code[i]+ut+1)*2]++,this.dyn_dtree[I.d_code(t)*2]++),(this.last_lit&8191)===0&&this.level>2){let n=this.last_lit*8,e=this.strstart-this.block_start;for(let s=0;s<lt;s++)n+=this.dyn_dtree[s*2]*(5+I.extra_dbits[s]);if(n>>>=3,this.matches<Math.floor(this.last_lit/2)&&n<Math.floor(e/2))return!0}return this.last_lit===bt-1}compress_block(t,i){let n=0;if(this.last_lit!==0)do{let e=this.pending_buf[rt+n*2]<<8&65280|this.pending_buf[rt+n*2+1]&255,s=this.pending_buf[Bt+n]&255;if(n++,e===0)this.send_code(s,t);else{let h=I._length_code[s];this.send_code(h+ut+1,t);let r=I.extra_lbits[h];r!==0&&(s-=I.base_length[h],this.send_bits(s,r)),e--,h=I.d_code(e),this.send_code(h,i),r=I.extra_dbits[h],r!==0&&(e-=I.base_dist[h],this.send_bits(e,r))}}while(n<this.last_lit);this.send_code(z,t),this.last_eob_len=t[z*2+1]}bi_windup(){this.bi_valid>8?this.put_short(this.bi_buf):this.bi_valid>0&&(this.pending_buf[this.pending++]=this.bi_buf),this.bi_buf=0,this.bi_valid=0}copy_block(t,i,n){this.bi_windup(),this.last_eob_len=8,n&&(this.put_short(i),this.put_short(~i)),this.pending_buf.set(this.window.subarray(t,t+i),this.pending),this.pending+=i}_tr_stored_block(t,i,n){this.send_bits((fi<<1)+(n?1:0),3),this.copy_block(t,i,!0)}_tr_flush_block(t,i,n){let e,s,h=0;this.level>0?(this.l_desc.build_tree(this),this.d_desc.build_tree(this),h=this.build_bl_tree(),e=this.opt_len+3+7>>>3,s=this.static_len+3+7>>>3,s<=e&&(e=s)):e=s=i+5,i+4<=e&&t!==-1?this._tr_stored_block(t,i,n):s==e?(this.send_bits((mt<<1)+(n?1:0),3),this.compress_block(P.static_ltree,P.static_dtree)):(this.send_bits((_i<<1)+(n?1:0),3),this.send_all_trees(this.l_desc.max_code+1,this.d_desc.max_code+1,h+1),this.compress_block(this.dyn_ltree,this.dyn_dtree)),this.init_block(),n&&this.bi_windup()}flush_block_only(t){this._tr_flush_block(this.block_start>=0?this.block_start:-1,this.strstart-this.block_start,t),this.block_start=this.strstart,this.strm.flush_pending(this)}fill_window(){do{let t=Zt-this.lookahead-this.strstart;if(t===0&&this.strstart===0&&this.lookahead===0)t=32768;else if(t===-1)t--;else if(this.strstart>=32768+32768-N){this.window.set(this.window.subarray(32768,32768+32768),0),this.match_start-=32768,this.strstart-=32768,this.block_start-=32768;let n=it,e=n;do{let s=this.head[--e]&65535;this.head[e]=s>=32768?s-32768:0}while(--n!==0);n=32768,e=n;do{let s=this.prev[--e]&65535;this.prev[e]=s>=32768?s-32768:0}while(--n!==0);t+=32768}if(this.strm.avail_in===0)return;const i=this.strm.read_into_buf(this.window,this.strstart+this.lookahead,t);this.lookahead+=i,this.lookahead>=D&&(this.ins_h=this.window[this.strstart]&255,this.ins_h=(this.ins_h<<X^this.window[this.strstart+1]&255)&V)}while(this.lookahead<N&&this.strm.avail_in!==0)}deflate_stored(t){let i=65535;for(i>vt-5&&(i=vt-5);;){if(this.lookahead<=1){if(this.fill_window(),this.lookahead===0&&t===0)return 0;if(this.lookahead===0)break}this.strstart+=this.lookahead,this.lookahead=0;let n=this.block_start+i;if((this.strstart===0||this.strstart>=n)&&(this.lookahead=this.strstart-n,this.strstart=n,this.flush_block_only(!1),this.strm.avail_out===0)||this.strstart-this.block_start>=32768-N&&(this.flush_block_only(!1),this.strm.avail_out===0))return 0}return this.flush_block_only(t===4),this.strm.avail_out===0?t===4?2:0:t===4?3:1}longest_match(t){let i=this.max_chain_length,n=this.strstart,e=this.prev_length,s=this.strstart>32768-N?this.strstart-(32768-N):0,h=this.nice_match;const r=this.window,a=this.strstart+_t;let d=r[n+e-1],u=r[n+e];const p=r[n],B=r[n+1];this.prev_length>=this.good_match&&(i>>=2),h>this.lookahead&&(h=this.lookahead);do{let y=t,Z=!0;do{if(y=t,r[y+e]!==u||r[y+e-1]!==d){if((t=this.prev[t&32767])>s&&--i!==0)continue;Z=!1}break}while(!0);if(!Z)break;if(r[y]!==p||r[y+1]!==B)continue;n+=2,y+=2;do{const g=r[n]<<24|r[n+1]<<16|r[n+2]<<8|r[n+3],f=r[y]<<24|r[y+1]<<16|r[y+2]<<8|r[y+3],_=g^f;if(_){const m=Math.clz32(_)>>3;n+=m,y+=m;break}else n+=4,y+=4}while(n<a);n>a&&(n=a);let A=_t-(a-n);if(n=a-_t,A>e){if(this.match_start=t,e=A,A>=h)break;d=r[n+e-1],u=r[n+e]}}while((t=this.prev[t&32767])>s&&--i!==0);return e<=this.lookahead?e:this.lookahead}deflate_fast(t){let i=0,n;for(;;){if(this.lookahead<N){if(this.fill_window(),this.lookahead<N&&t===0)return 0;if(this.lookahead===0)break}if(this.lookahead>=D&&(this.ins_h=(this.ins_h<<X^this.window[this.strstart+(D-1)]&255)&V,i=this.head[this.ins_h]&65535,this.prev[this.strstart&32767]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart),i!==0&&(this.strstart-i&65535)<=32768-N&&this.strategy!==2&&(this.match_length=this.longest_match(i)),this.match_length>=D)if(n=this._tr_tally(this.strstart-this.match_start,this.match_length-D),this.lookahead-=this.match_length,this.match_length<=this.max_lazy_match&&this.lookahead>=D){this.match_length--;do this.strstart++,this.ins_h=(this.ins_h<<X^this.window[this.strstart+(D-1)]&255)&V,i=this.head[this.ins_h]&65535,this.prev[this.strstart&32767]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart;while(--this.match_length!==0);this.strstart++}else this.strstart+=this.match_length,this.match_length=0,this.ins_h=this.window[this.strstart]&255,this.ins_h=(this.ins_h<<X^this.window[this.strstart+1]&255)&V;else n=this._tr_tally(0,this.window[this.strstart]&255),this.lookahead--,this.strstart++;if(n&&(this.flush_block_only(!1),this.strm.avail_out===0))return 0}return this.flush_block_only(t===4),this.strm.avail_out===0?t===4?2:0:t===4?3:1}deflate_slow(t){let i=0,n,e,s;for(;;){if(this.lookahead<N){if(this.fill_window(),this.lookahead<N&&t===0)return 0;if(this.lookahead===0)break}if(this.lookahead>=D&&(this.ins_h=(this.ins_h<<X^this.window[this.strstart+(D-1)]&255)&V,i=this.head[this.ins_h]&65535,this.prev[this.strstart&32767]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart),this.prev_length=this.match_length,s=this.match_start,this.match_length=D-1,i!==0&&this.prev_length<this.max_lazy_match&&(this.strstart-i&65535)<=32768-N&&(this.strategy!==2&&(this.match_length=this.longest_match(i)),this.match_length<=5&&(this.strategy===1||this.match_length===D&&this.strstart-this.match_start>4096)&&(this.match_length=D-1)),this.prev_length>=D&&this.match_length<=this.prev_length){e=this.strstart+this.lookahead-D,n=this._tr_tally(this.strstart-1-s,this.prev_length-D),this.lookahead-=this.prev_length-1,this.prev_length-=2;do++this.strstart<=e&&(this.ins_h=(this.ins_h<<X^this.window[this.strstart+(D-1)]&255)&V,i=this.head[this.ins_h]&65535,this.prev[this.strstart&32767]=this.head[this.ins_h],this.head[this.ins_h]=this.strstart);while(--this.prev_length!==0);if(this.match_available=!1,this.match_length=D-1,this.strstart++,n&&(this.flush_block_only(!1),this.strm.avail_out===0))return 0}else if(this.match_available){if(n=this._tr_tally(0,this.window[this.strstart-1]&255),n&&this.flush_block_only(!1),this.strstart++,this.lookahead--,this.strm.avail_out===0)return 0}else this.match_available=!0,this.strstart++,this.lookahead--}return this.match_available&&(n=this._tr_tally(0,this.window[this.strstart-1]&255),this.match_available=!1),this.flush_block_only(t===4),this.strm.avail_out===0?t===4?2:0:t===4?3:1}deflateSetDictionary(t){const i=t.byteLength;let n=i,e,s=0;if(!t||this.status!==1)return-2;if(n<D)return 0;for(n>32768-N&&(n=32768-N,s=i-n),this.window.set(t.subarray(s,s+n),0),this.strstart=n,this.block_start=n,this.ins_h=this.window[0]&255,this.ins_h=(this.ins_h<<X^this.window[1]&255)&V,e=0;e<=n-D;e++)this.ins_h=(this.ins_h<<X^this.window[e+(D-1)]&255)&V,this.prev[e&32767]=this.head[this.ins_h],this.head[this.ins_h]=e;return 0}deflate(t){if(t>4||t<0)return-2;const{strm:i}=this;if(!i.next_out||!i.next_in&&i.avail_in!==0||this.status===3&&t!=4)return-2;if(i.avail_out===0)return-5;let n=this.last_flush;if(this.last_flush=t,this.status===1&&(this.status=2),this.pending!==0){if(i.flush_pending(this),i.avail_out===0)return this.last_flush=-1,0}else if(i.avail_in===0&&t<=n&&t!==4)return-5;if(this.status===3&&i.avail_in!==0)return-5;if(i.avail_in!==0||this.lookahead!==0||t!==0&&this.status!==3){let e;switch($[this.level].func){case 0:e=this.deflate_stored(t);break;case 1:e=this.deflate_fast(t);break;case 2:default:e=this.deflate_slow(t);break}if((e==2||e===3)&&(this.status=3),e===0||e===2)return i.avail_out===0&&(this.last_flush=-1),0;if(e===1){if(t===1)this._tr_align();else if(this._tr_stored_block(0,0,!1),t===3)for(let s=0;s<it;s++)this.head[s]=0;if(i.flush_pending(this),i.avail_out===0)return this.last_flush=-1,0}}return t!==4?0:1}}class di{constructor(t){var i,n;this.checksum=1,this.origSize=0,this.dictChecksum=0;const e=(i=t==null?void 0:t.level)!==null&&i!==void 0?i:6,s=(n=t==null?void 0:t.format)!==null&&n!==void 0?n:"deflate",h=t==null?void 0:t.dictionary,r=t==null?void 0:t.fileName;if(typeof e!="number"||e<1||e>9)throw new RangeError("level must be between 1 and 9, inclusive");if(s!=="gzip"&&s!=="raw"&&s!=="deflate")throw new RangeError("container must be one of `raw`, `deflate`, `gzip`");if(typeof r<"u"&&typeof r!="string")throw new TypeError("fileName must be a string");if(this.fileName=r||"",this.z=new Pt,this.deflate=new oi(this.z,e,0),h){if(s!=="deflate")throw new TypeError("Can only provide a dictionary for `deflate` containers.");const a=Y(h);if(!a)throw new TypeError("dictionary must be an ArrayBuffer or buffer view");this.dictChecksum=dt(a),this.deflate.deflateSetDictionary(a)}this.format=s,this.format==="gzip"&&(this.checksum=0)}buildZlibHeader(){let t=2,i=1;this.dictChecksum!==0&&(t+=4,i=32);const n=new ArrayBuffer(t),e=new DataView(n);return e.setUint16(0,120<<8|i),this.dictChecksum!==0&&e.setUint32(2,this.dictChecksum),new Uint8Array(n)}buildGZipHeader(){let t=0,i=[];this.fileName.length>0&&(t|=8,i=Array.from(this.fileName).map(r=>{const a=r.charCodeAt(0);return a>255?95:a}),i.push(0));const n=new ArrayBuffer(10+i.length),e=new DataView(n);e.setUint16(0,31<<8|139),e.setUint16(2,8<<8|t);const s=Math.floor(Date.now()/1e3);e.setUint32(4,s,!0),e.setUint16(8,0<<8|255);const h=new Uint8Array(n);return i.length&&h.set(i,10),h}buildTrailer(){const t=this.format==="gzip",i=t?8:4,n=new ArrayBuffer(i),e=new DataView(n);return e.setUint32(0,this.checksum,t),t&&e.setUint32(4,this.origSize,!0),new Uint8Array(n)}append(t){const i=[],n=Y(t);if(!(n instanceof Uint8Array))throw new TypeError("data must be an ArrayBuffer or buffer view");if(!n.length)return i;this.format!=="gzip"?this.checksum=dt(n,this.checksum):this.checksum=Rt(n,this.checksum),this.origSize+=n.length;const{deflate:e,z:s}=this;s.next_in_index=0,s.next_in=n,s.avail_in=n.length,e.status===1&&(this.format==="deflate"?i.push(this.buildZlibHeader()):this.format==="gzip"&&i.push(this.buildGZipHeader()));do{if(s.next_out_index=0,s.avail_out=et,e.deflate(0)!==0)throw new Error("deflating: "+s.msg);s.next_out_index&&i.push(new Uint8Array(s.next_out.subarray(0,s.next_out_index)))}while(s.avail_in>0||s.avail_out===0);return i}finish(){const t=[],{deflate:i,z:n}=this;if(i.status===1)throw new Error("Cannot call finish before at least 1 call to append");do{n.next_out_index=0,n.avail_out=et;const e=i.deflate(4);if(e!==1&&e!==0)throw new Error("deflating: "+n.msg);et-n.avail_out>0&&t.push(new Uint8Array(n.next_out.subarray(0,n.next_out_index)))}while(n.avail_in>0||n.avail_out===0);return this.format!=="raw"&&t.push(this.buildTrailer()),t}}var Lt=Symbol("decContext"),pt=Symbol("decTransform"),ci=function(){function l(t){this.inflater_=t}return l.prototype.transform=function(t,i){if(!(t instanceof ArrayBuffer||ArrayBuffer.isView(t)))throw new TypeError("Input data must be a BufferSource");for(var n=this.inflater_.append(t),e=0,s=n;e<s.length;e++){var h=s[e];i.enqueue(h)}},l.prototype.flush=function(t){var i=this.inflater_.finish();if(!i.success)throw i.complete?i.checksum==="mismatch"?new Error("Data integrity check failed"):i.fileSize==="mismatch"?new Error("Data size check failed"):new Error("Decompression error"):new Error("Unexpected EOF during decompression")},l}(),xi=function(){function l(t){if(t!=="deflate"&&t!=="gzip")throw new TypeError("format must be one of `deflate`, `gzip`");this[Lt]=new ai,this[pt]=new TransformStream(new ci(this[Lt]))}return Object.defineProperty(l.prototype,"readable",{get:function(){return this[pt].readable},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"writable",{get:function(){return this[pt].writable},enumerable:!0,configurable:!0}),l}(),Ot=Symbol("comContext"),gt=Symbol("comTransform"),ui=function(){function l(t){this.deflater_=t}return l.prototype.transform=function(t,i){if(!(t instanceof ArrayBuffer||ArrayBuffer.isView(t)))throw new TypeError("Input data must be a BufferSource");for(var n=this.deflater_.append(t),e=0,s=n;e<s.length;e++){var h=s[e];i.enqueue(h)}},l.prototype.flush=function(t){for(var i=this.deflater_.finish(),n=0,e=i;n<e.length;n++){var s=e[n];t.enqueue(s)}},l}(),bi=function(){function l(t){if(t!=="deflate"&&t!=="gzip")throw new TypeError("format must be one of `deflate`, `gzip`");this[Ot]=new di({format:t}),this[gt]=new TransformStream(new ui(this[Ot]))}return Object.defineProperty(l.prototype,"readable",{get:function(){return this[gt].readable},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"writable",{get:function(){return this[gt].writable},enumerable:!0,configurable:!0}),l}();export{bi as CompressionStream,xi as DecompressionStream};
