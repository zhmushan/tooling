import{_ as p,a as d}from"./Layout.aa89677a.js";import{b5 as c,d as m,m as i,o as w,e as f,w as l,a as _,u as v}from"./index.66105cd1.js";import"./Grid.141cc819.js";const h=new TextEncoder,b=new TextDecoder;async function y(a){const o=h.encode(a);window.CompressionStream||(window.CompressionStream=(await c(()=>import("./sd-streams-compression.esm.2095bd4a.js"),[])).CompressionStream);const t=new window.CompressionStream("gzip"),e=t.writable.getWriter();return e.write(o),e.close(),new Response(t.readable).arrayBuffer().then(S)}async function C(a){const o=Uint8Array.from(atob(a),r=>r.charCodeAt(0));window.DecompressionStream||(window.DecompressionStream=(await c(()=>import("./sd-streams-compression.esm.2095bd4a.js"),[])).DecompressionStream);const t=new window.DecompressionStream("gzip"),e=t.writable.getWriter();return e.write(o),e.close(),new Response(t.readable).arrayBuffer().then(r=>b.decode(r))}function S(a){let o="";const t=new Uint8Array(a),e=t.byteLength;for(let r=0;r<e;++r)o+=String.fromCharCode(t[r]);return btoa(o)}const x=m({name:"GZip",setup(a){const o=i(""),t=i(""),e=i();function r(s){e.value=void 0,o.value=s,y(s).then(n=>t.value=n).catch(n=>e.value=n)}function u(s){e.value=void 0,t.value=s,C(s).then(n=>o.value=n).catch(n=>e.value=n)}return(s,n)=>(w(),f(p,{"show-error":e.value,input:o.value,"onUpdate:input":r},{output:l(()=>[_(v(d),{value:t.value,type:"textarea",rows:"12",onInput:u},null,8,["value"])]),_:1},8,["show-error","input"]))}});export{x as default};
